% Router to distribute our callbacks appropriately. 
function router(hObject, eventdata, handles, id)
    persistent search
    if isempty(search)
        import callbacks.*

        search = {...
            @(hObj,evnt,handles,id) generalFcn(hObj,evnt,handles,id),...
            @(hObj,evnt,handles,id) toolbarFcn(hObj,evnt,handles,id),...
            @(hObj,evnt,handles,id) brushFcn(hObj,evnt,handles,id),...
            @(hObj,evnt,handles,id) specMaskFcn(hObj,evnt,handles,id),...
            @(hObj,evnt,handles,id) listenersFcn(hObj,evnt,handles,id),...
            @(hObj,evnt,handles,id) historyFcn(hObj,evnt,handles,id),...
            @(hObj,evnt,handles,id) keyboardFcn(hObj,evnt,handles,id)...
        };
    end

    for sFcn = search
        found = sFcn{1}(hObject, eventdata, handles, id);
        if found
            break;
        end
    end